/*
 * CustomizerPackage
 */

package sipregistrarserviceengine.project.customizer;

import javax.swing.JPanel;
import org.openide.util.HelpCtx;

/** Customizer for general project attributes.
 *
 * @author  chikkala
 */
public class CustomizerPackage extends JPanel implements HelpCtx.Provider
{
    
    private SEPluginProjectCustomizerModel uiModel;
    
    public CustomizerPackage(SEPluginProjectCustomizerModel uiModel)
    {
        this.uiModel = uiModel;
        initComponents();
        
        mZipFileTF.setDocument( uiModel.getSUZipModel());
        mExcludesTF.setDocument(uiModel.getBuildFilesExcludesModel());
        
        uiModel.getJarCompressModel().setMnemonic( mCompressChkBox.getMnemonic()  );
        mCompressChkBox.setModel(uiModel.getJarCompressModel());
    }
    
    public HelpCtx getHelpCtx()
    {
        return new HelpCtx( CustomizerPackage.class    );
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;
        
        mZipFileLBL = new javax.swing.JLabel();
        mZipFileTF = new javax.swing.JTextField();
        mExcludesLBL = new javax.swing.JLabel();
        mExcludesTF = new javax.swing.JTextField();
        mCompressChkBox = new javax.swing.JCheckBox();
        mExcludeMessageLBL = new javax.swing.JLabel();
        
        setLayout(new java.awt.GridBagLayout());
        
        mZipFileLBL.setLabelFor(mZipFileTF);
        org.openide.awt.Mnemonics.setLocalizedText(mZipFileLBL, org.openide.util.NbBundle.getMessage(CustomizerPackage.class, "LBL_config.package.su.zip")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 12);
        add(mZipFileLBL, gridBagConstraints);
        
        mZipFileTF.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 12, 0);
        add(mZipFileTF, gridBagConstraints);
        mZipFileTF.getAccessibleContext().setAccessibleDescription(null);
        
        mExcludesLBL.setLabelFor(mExcludesTF);
        org.openide.awt.Mnemonics.setLocalizedText(mExcludesLBL, org.openide.util.NbBundle.getMessage(CustomizerPackage.class, "LBL_config.package.build.files.exludes")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 12);
        add(mExcludesLBL, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(mExcludesTF, gridBagConstraints);
        mExcludesTF.getAccessibleContext().setAccessibleDescription(null);
        
        org.openide.awt.Mnemonics.setLocalizedText(mCompressChkBox, org.openide.util.NbBundle.getMessage(CustomizerPackage.class, "CHKB_config.package.jar.compress")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        add(mCompressChkBox, gridBagConstraints);
        mCompressChkBox.getAccessibleContext().setAccessibleDescription(null);
        
        mExcludeMessageLBL.setLabelFor(mExcludesTF);
        org.openide.awt.Mnemonics.setLocalizedText(mExcludeMessageLBL, org.openide.util.NbBundle.getBundle(CustomizerPackage.class).getString("LBL_config.package.build.files.exludes.message")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        add(mExcludeMessageLBL, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox mCompressChkBox;
    private javax.swing.JLabel mExcludeMessageLBL;
    private javax.swing.JLabel mExcludesLBL;
    private javax.swing.JTextField mExcludesTF;
    private javax.swing.JLabel mZipFileLBL;
    private javax.swing.JTextField mZipFileTF;
    // End of variables declaration//GEN-END:variables
    
}
